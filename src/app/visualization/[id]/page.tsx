import { C1Component, ThemeProvider } from "@thesysai/genui-sdk";
import "@crayonai/react-ui/styles/index.css";

interface VisualizationData {
  visualization_data: string;
  timestamp: string;
  prompt: string;
}

async function getVisualizationData(id: string): Promise<VisualizationData | null> {
  try {
    const response = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL || 'https://adi-black.vercel.app'}/api/adi-visualize`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        action: 'get',
        visualizationId: id
      })
    });

    if (response.ok) {
      const data = await response.json();
      if (data.success && data.visualization_data) {
        return {
          visualization_data: data.visualization_data,
          timestamp: data.timestamp,
          prompt: data.prompt || ''
        };
      }
    }
    return null;
  } catch (error) {
    console.error('Error fetching visualization:', error);
    return null;
  }
}

const VisualizationPage = async ({ params }: { params: Promise<{ id: string }> }) => {
  const { id } = await params;
  const visualizationData = await getVisualizationData(id);

  if (!visualizationData) {
    return (
      <ThemeProvider mode="light">
        <div className="min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center">
          <div className="text-center">
            <div className="text-red-600 text-6xl mb-4">⚠️</div>
            <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">Error</h1>
            <p className="text-gray-600 dark:text-gray-300">Visualization not found</p>
            <button 
              onClick={() => window.location.href = '/'}
              className="mt-4 px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Go Back
            </button>
          </div>
        </div>
      </ThemeProvider>
    );
  }

  return (
    <ThemeProvider mode="light">
      <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
        {/* Header */}
        <div className="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
          <div className="max-w-6xl mx-auto px-4 py-6">
            <h1 className="text-3xl font-bold text-gray-900 dark:text-white">
              Data Visualization
            </h1>
            <p className="text-gray-600 dark:text-gray-300 mt-2">
              Interactive visualization generated by AI
            </p>
            {visualizationData?.timestamp && (
              <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                Generated: {new Date(visualizationData.timestamp).toLocaleString()}
              </p>
            )}
            {visualizationData?.prompt && (
              <p className="text-sm text-gray-500 dark:text-gray-400 mt-1">
                Prompt: {visualizationData.prompt.substring(0, 100)}...
              </p>
            )}
          </div>
        </div>

        {/* Visualization Content */}
        <div className="max-w-6xl mx-auto px-4 py-8">
          <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm">
            <div className="p-6">
              <div className="min-h-[600px] border-2 border-dashed border-gray-200 dark:border-gray-600 rounded-lg p-4">
                {visualizationData?.visualization_data ? (
                  <C1Component
                    isStreaming={false}
                    c1Response={visualizationData.visualization_data}
                    onAction={({ llmFriendlyMessage }) => {
                      console.log("Action triggered:", llmFriendlyMessage);
                    }}
                  />
                ) : (
                  <div className="flex items-center justify-center h-full">
                    <div className="text-center">
                      <p className="text-gray-500 dark:text-gray-400 mb-4">
                        No visualization data available
                      </p>
                    </div>
                  </div>
                )}
              </div>
            </div>
          </div>

          {/* Actions */}
          <div className="mt-6 flex justify-center space-x-4">
            <button 
              onClick={() => window.location.href = '/'}
              className="px-6 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
            >
              Create New Visualization
            </button>
            <button 
              onClick={() => window.print()}
              className="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Print / Save
            </button>
          </div>
        </div>
      </div>
    </ThemeProvider>
  );
};

export default VisualizationPage;
